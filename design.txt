the design is basically MVC

// controller depends on model
controller :: termion::Key -> bool
controller ::
 termion::Key | 
 termion::Key -> Key |
 Key -> Action | // pass key to automaton visitor and change its state
 Action -> bool // depends on model

// view depends on model
view :: (w,h) -> [[(char, fg, bg)]]

// view is composable
compose :: view -> view -> view
X = [('a',,), ('b',,)]
Y = [(,,red), (,,)]
Z = [(,,), (,blue,)]
Z*Y*X = [('a',,red),('b',blue,)]

// example
X = orig buffer
Y = visual mode range coloring (bg)
Z = give colors to certain texts (fg)